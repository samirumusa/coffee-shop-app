name: Port Ocean Kafka Exporter

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  run-integration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code (optional)
        uses: actions/checkout@v3

      - name: Run Port Ocean Kafka Container
        env:
          OCEAN__PORT__CLIENT_ID: ${{ secrets.OCEAN__PORT__CLIENT_ID }}
          OCEAN__PORT__CLIENT_SECRET: ${{ secrets.OCEAN__PORT__CLIENT_SECRET }}
          OCEAN__INTEGRATION__CONFIG__CLUSTER_CONF_MAPPING: ${{ secrets.OCEAN__INTEGRATION__CONFIG__CLUSTER_CONF_MAPPING }}
        run: |
          echo "Checking if OCEAN__INTEGRATION__CONFIG__CLUSTER_CONF_MAPPING is set..."
          if [ -z "$OCEAN__INTEGRATION__CONFIG__CLUSTER_CONF_MAPPING" ]; then
            echo "❌ OCEAN__INTEGRATION__CONFIG__CLUSTER_CONF_MAPPING is empty or not set."
            exit 1
          else
            echo "✅ OCEAN__INTEGRATION__CONFIG__CLUSTER_CONF_MAPPING is set."
          fi

          integration_type="kafka"
          version="latest"
          image_name="ghcr.io/port-labs/port-ocean-$integration_type:$version"

          docker run -i --rm \
            -e OCEAN__EVENT_LISTENER='{"type":"ONCE"}' \
            -e OCEAN__INITIALIZE_PORT_RESOURCES=true \
            -e OCEAN__SEND_RAW_DATA_EXAMPLES=true \
            -e OCEAN__INTEGRATION__CONFIG__CLUSTER_CONF_MAPPING="$OCEAN__INTEGRATION__CONFIG__CLUSTER_CONF_MAPPING" \
            -e OCEAN__PORT__CLIENT_ID="$OCEAN__PORT__CLIENT_ID" \
            -e OCEAN__PORT__CLIENT_SECRET="$OCEAN__PORT__CLIENT_SECRET" \
            -e OCEAN__PORT__BASE_URL="https://api.getport.io" \
            $image_name
